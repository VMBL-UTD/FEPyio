# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

# Based on: https://medium.com/@vanflymen/9e74299dd4a5

name: Validation

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  validation:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    # Poetry
    - name: Install Poetry
      uses: snok/install-poetry@v1.3.1
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true
        installer-parallel: true
    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v2
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --no-interaction --no-root

    # Validation
    - name: Check code quality with Black
      run: poetry run python -m black . --check

    - name: Run isort
      uses: isort/isort-action@v0.1.0

    - name: Lint with flake8
      run: |
        poetry run python -m flake8 .

    # - name: Lint with Mypy
    #   uses: jpetrucciani/mypy-check@0.761

    - name: Test with Pytest
      # env:
      #   DJANGO_SETTINGS_MODULE: project.settings
      #   SECRETS_FILE: .confidential/ci.json
      run: poetry run pytest --cov . -n 2
